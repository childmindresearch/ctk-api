name: Python Tests

on:
  push:
    branches:
      - main
  pull_request:

env:
  OPENAI_API_KEY: dummy_variable
  ELASTIC_PASSWORD: dummy_variable
  ELASTIC_URL: http://localhost:9200

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.9.2
        env:
          discovery.type: single-node
          cluster.name: elasticsearch
          ELASTIC_PASSWORD: ${{ env.ELASTIC_PASSWORD }}
          xpack.security.enabled: "false"
        ports:
          - 9200:9200

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry
      - name: Install dependencies
        run: |
          poetry install
      - name: Wait for Elasticsearch to start
        run: |
          timeout=60
          while ! curl -sSf http://localhost:9200; do
            sleep 1
            ((timeout--))
            if [[ $timeout -eq 0 ]]; then
              echo "Elasticsearch failed to start within 60 seconds"
              exit 1
            fi
          done
      - name: Run tests
        id: run-tests
        run: >
          poetry run pytest \
            --junitxml=pytest.xml \
            --cov-report=term-missing:skip-covered \
            --cov-report=xml:coverage.xml \
            --cov=src tests \
            --log-level=DEBUG \
            --verbose
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: poetry
      - run: |
          poetry install
          poetry run mypy .

  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: isort/isort-action@v1
        with:
          configuration: --profile black
