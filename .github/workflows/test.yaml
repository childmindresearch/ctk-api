name: Python Tests
on:
  push:
    branches:
    - main
  pull_request:

env:
  OPENAI_API_KEY: dummy_variable
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  ENVIRONMENT: ci-testing

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: ctk
        ports:
        - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: poetry
    - name: Install dependencies
      run: |
        poetry install
        poetry run python -c "import pypandoc; pypandoc.download_pandoc()"
    - name: Run tests
      id: run-tests
      run: >
        poetry run pytest \
          --junitxml=pytest.xml \
          --cov-report=term-missing:skip-covered \
          --cov-report=xml:coverage.xml \
          --cov=src tests \
          --log-level=DEBUG \
          --verbose
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  ruff:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: chartboost/ruff-action@v1

  mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: poetry
    - run: |
        poetry install
        poetry run mypy .
